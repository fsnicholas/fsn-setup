#!/bin/bash
# Source : https://github.com/Morgareth99/Funtoo-Dots/blob/master/Funtoo-Dots/Scripts/sysinfo.sh
# Edited : Erik Dubois - changed to work on ArcoLinux
#
# install software
# sudo pacman -S wmctrl
# awesome font displays in Termite not in urxvt

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-${HOME}/.config}"

get_packages(){
    has() { type -p "$1" >/dev/null && manager="$_"; }
    dir() { ((packages+=$#)); pac "$#"; }
    pac() { (($1 > 0)) && { managers+=("$1 (${manager})"); manager_string+="${manager}, "; }; }
    tot() { IFS=$'\n' read -d "" -ra pkgs < <("$@");((packages+="${#pkgs[@]}"));pac "${#pkgs[@]}"; }
    # Package Manager Programs.
    has "pacman-key" && tot pacman -Qq --color never
    has "dpkg"       && tot dpkg-query -f '.\n' -W
    has "rpm"        && tot rpm -qa
    has "xbps-query" && tot xbps-query -l
    has "apk"        && tot apk info
    has "opkg"       && tot opkg list-installed
    has "pacman-g2"  && tot pacman-g2 -Q
    has "lvu"        && tot lvu installed
    has "tce-status" && tot tce-status -i
    has "pkg_info"   && tot pkg_info
    has "tazpkg"     && tot tazpkg list && ((packages-=6))
    has "sorcery"    && tot gaze installed
    has "alps"       && tot alps showinstalled
    has "butch"      && tot butch list

    # Counting files/dirs.
    has "emerge"     && dir /var/db/pkg/*/*/
    has "nix-env"    && dir /nix/store/*/
    has "guix"       && dir /gnu/store/*/
    has "Compile"    && dir /Programs/*/
    has "eopkg"      && dir /var/lib/eopkg/package/*
    has "crew"       && dir /usr/local/etc/crew/meta/*.filelist
    has "pkgtool"    && dir /var/log/packages/*
    has "cave"       && dir /var/db/paludis/repositories/cross-installed/*/data/*/ \
                            /var/db/paludis/repositories/installed/data/*/

    # Other (Needs complex command)
    has "kpm-pkg" && ((packages+="$(kpm  --get-selections | grep -cv deinstall$)"))

    case "$kernel_name" in
        "FreeBSD") has "pkg"     && tot pkg info ;;
        "SunOS")   has "pkginfo" && tot pkginfo -i ;;
        *)
            has "pkg" && dir /var/db/pkg/*

            ((packages == 0)) && \
                has "pkg" && tot pkg list
        ;;
    esac

    # List these last as they accompany regular package managers.
    has "flatpak" && tot flatpak list

    # Snap hangs if the command is run without the daemon running.
    # Only run snap if the daemon is also running.
    has "snap" && ps -e | grep -qFm 1 "snapd" >/dev/null && tot snap list && ((packages-=1))

    if ((packages == 0)); then
        unset packages
    else
        packages+=" (${manager_string%,*})"
    fi

    packages="${packages/pacman-key/pacman}"
    packages="${packages/nix-env/nix}"

    echo "$packages"
}


OS=$(cat /etc/lsb-release | awk -F '=' '/DISTRIB_ID/ {print $2}')
KERNEL=$(uname -r)
ARCH=$(uname -m)
VERSION=$(cat /etc/lsb-release | awk -F '=' '/DISTRIB_RELEASE/ {print $2}')
UPTIME=$(awk '{printf("%d:%02d:%02d:%02d",($1/60/60/24),($1/60/60%24),($1/60%60),($1%60))}' /proc/uptime)
#MODEL=$(cat /sys/devices/virtual/dmi/id/board_{name,vendor} | awk '!(NR%2){print$1,p}{p=$0}')
DE=$(wmctrl -m | awk 'NR==1 {print $2}' | perl -nle 'print ucfirst lc')
CPU=$(awk < /proc/cpuinfo '/model name/{gsub(/[(TMR)]/,"");print $4,$5,$6}' | head -1)
#GPU=$(nvidia-smi --query-gpu=gpu_name --format=csv|sed -n 2p)
SHELL=$(echo "$SHELL" | awk -F/ '{for ( i=1; i <= NF; i++) sub(".", substr(toupper($i),1,1) , $i); print $NF}')
RESOLUTION=$(xdpyinfo | awk '/dimensions:/ {printf $2}')
#BIRTH=$(ls -alct /|sed '$!d'|awk '{print $7, $6, $8}')




if [ -f ~/.gtkrc-2.0 ]; then
    GtkTheme=$(awk < ~/.gtkrc-2.0 -F'"' '/gtk-theme-name/{print $2}')
    GtkIcon=$(awk < ~/.gtkrc-2.0 -F'"' '/gtk-icon-theme-name/{print $2}' )
    GtkFont=$(awk < ~/.gtkrc-2.0 -F'"' '/gtk-font-name/{print $2}')
elif [ -f ~/.config/gtk-3.0/settings.ini  ]; then
    GtkTheme=$(awk < ~/.config/gtk-3.0/settings.ini -F'=' '/gtk-theme-name/{print $2}')
    GtkIcon=$(awk < ~/.config/gtk-3.0/settings.ini -F'=' '/gtk-icon-theme-name/{print $2}' )
    GtkFont=$(awk < ~/.config/gtk-3.0/settings.ini -F'=' '/gtk-font-name/{print $2}')
fi


Packages=$(checkupdates | wc -l)
Layout=$(setxkbmap -print | awk -F"+" '/xkb_symbols/{for ( i=1; i <= NF; i++) sub(".", substr(toupper($i),1,1) , $i); print $2}')

f1=$'\e[1;37m'

 echo  ""
 echo -e "\e[91m   --------------------"
 echo "   SYSTEM INFORMATION"
 echo "   --------------------"
 echo  ""
 echo -e "\e[91m     $USER"
 #echo -e "\e[94m     \e[39m$MODEL"
 echo -e "\e[94m     \e[39m$OS $ARCH $VERSION"
 echo -e "\e[94m   🧰 $f1$(get_packages)"
 echo -e "\e[94m     \e[39m$KERNEL"
 echo -e "\e[94m     \e[39m$UPTIME"
 echo -e "\e[94m     \e[39m$SHELL"
 echo -e "\e[94m     \e[39m$RESOLUTION"
 echo -e "\e[94m     \e[39m$CPU"
 #echo -e "\e[94m     \e[39m$GPU"
 echo -e "\e[91m   --------------------"
 echo -e "\e[91m     \e[31m$DE"
 echo -e "\e[94m     \e[39m$GtkTheme"
 echo -e "\e[94m     \e[39m$GtkIcon"
 echo -e "\e[94m   🆎 \e[39m$GtkFont"
 #echo -e "\e[94m     \e[39m$BIRTH"
 echo -e "\e[91m   --------------------"
 echo -e "\e[91m   🧰 \e[31m$Packages" updates
 echo -e "\e[94m     \e[39m$Layout"
 echo  ""